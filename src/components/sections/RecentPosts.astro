---
// src/components/sections/RecentPosts.astro
// REVISI FINAL - Path import sudah diperbaiki

import { client, urlFor } from '../../lib/sanity'; // <-- PERBAIKAN ADA DI SINI
import BlogPost from '@components/blog/BlogPost.astro';
import Button from '@components/ui/Button.astro';
import Eyebrow from '@components/ui/Eyebrow.astro';
import { getPaddingClass, getBackgroundColor, getTextColor } from '@utils/styleUtils';
import type { PaddingSize, ThemeColor } from '@utils/styleUtils';

export interface Props {
    content?: {
        eyebrow?: string;
        title?: string;
        description?: string;
        button?: {
            text: string;
            link: string;
            variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
        };
    };
    background?: ThemeColor;
    padding?: PaddingSize;
    paddingTop?: PaddingSize;
    paddingBottom?: PaddingSize;
    postsToShow?: number;
    category?: string;
}

const { content, background = 'base', postsToShow = 3, category } = Astro.props;

// Styling
const bgColor = getBackgroundColor(background);
const textColor = getTextColor(background);
const paddingClass = getPaddingClass({
    padding: Astro.props.padding,
    paddingTop: Astro.props.paddingTop,
    paddingBottom: Astro.props.paddingBottom,
});

// Mengambil data dari Sanity
const allPosts = await client.fetch(`
*[_type == "post"] | order(publishedAt desc) {
    title,
    "slug": slug.current,
    excerpt,
    "publishDate": publishedAt,
    "featuredImage": mainImage { asset->{...}, alt },
    categories[]->{ title }
}`);

let filteredPosts = allPosts
    .filter((post: any) => !category || post.categories?.some((cat: any) => cat.title === category))
    .slice(0, postsToShow);
---

<section class:list={['relative', bgColor, paddingClass]}>
    <div class="site-container px-4">
        <!-- ... Konten header (title, description, dll.) ... -->
        <div class="posts-grid">
            {
                filteredPosts.map((post: any, index: number) => (
                    <div>
                        <BlogPost
                            title={post.title}
                            excerpt={post.excerpt}
                            featuredImage={post.featuredImage ? urlFor(post.featuredImage).width(600).url() : ''}
                            publishDate={new Date(post.publishDate)}
                            categories={post.categories?.map((cat: any) => cat.title) || []}
                            slug={post.slug}
                            index={index}
                        />
                    </div>
                ))
            }
        </div>
        <!-- ... sisa kode ... -->
    </div>
</section>

<style>
    /* ... style ... */
</style>
